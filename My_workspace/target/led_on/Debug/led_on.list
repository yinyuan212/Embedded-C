
led_on.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001b8  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000340  08000348  00001348  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000340  08000340  00001348  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000340  08000340  00001348  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000340  08000348  00001348  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000340  08000340  00001340  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000344  08000344  00001344  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001348  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00001348  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00001348  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000015b  00000000  00000000  00001378  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000000a0  00000000  00000000  000014d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  00001578  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000002d  00000000  00000000  000015c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000fbf  00000000  00000000  000015ed  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000004df  00000000  00000000  000025ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00003d32  00000000  00000000  00002a8b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000067bd  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000058  00000000  00000000  00006800  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000070  00000000  00000000  00006858  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000328 	.word	0x08000328

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000328 	.word	0x08000328

080001c8 <main>:
//}

#include<stdint.h>
#include<stdbool.h>

int main(void) {
 80001c8:	b480      	push	{r7}
 80001ca:	b089      	sub	sp, #36	@ 0x24
 80001cc:	af00      	add	r7, sp, #0

// LED5 PD14
	uint32_t * clockReg = (uint32_t *)0x40023830;
 80001ce:	4b2a      	ldr	r3, [pc, #168]	@ (8000278 <main+0xb0>)
 80001d0:	617b      	str	r3, [r7, #20]

	uint32_t * modeRegD = (uint32_t *)0x40020C00;
 80001d2:	4b2a      	ldr	r3, [pc, #168]	@ (800027c <main+0xb4>)
 80001d4:	613b      	str	r3, [r7, #16]
	uint32_t * modeRegA = (uint32_t *)0x40020000; // 00就是input，不用改
 80001d6:	4b2a      	ldr	r3, [pc, #168]	@ (8000280 <main+0xb8>)
 80001d8:	60fb      	str	r3, [r7, #12]

	uint32_t * outputRegD = (uint32_t*)0x40020C14;
 80001da:	4b2a      	ldr	r3, [pc, #168]	@ (8000284 <main+0xbc>)
 80001dc:	60bb      	str	r3, [r7, #8]
	uint32_t * inputRegA = (uint32_t*)0x40020010;
 80001de:	4b2a      	ldr	r3, [pc, #168]	@ (8000288 <main+0xc0>)
 80001e0:	607b      	str	r3, [r7, #4]

	*clockReg |= (1 << 3);
 80001e2:	697b      	ldr	r3, [r7, #20]
 80001e4:	681b      	ldr	r3, [r3, #0]
 80001e6:	f043 0208 	orr.w	r2, r3, #8
 80001ea:	697b      	ldr	r3, [r7, #20]
 80001ec:	601a      	str	r2, [r3, #0]
	*clockReg |= (1 << 0);
 80001ee:	697b      	ldr	r3, [r7, #20]
 80001f0:	681b      	ldr	r3, [r3, #0]
 80001f2:	f043 0201 	orr.w	r2, r3, #1
 80001f6:	697b      	ldr	r3, [r7, #20]
 80001f8:	601a      	str	r2, [r3, #0]

	*modeRegA &= ~(3 << 0);
 80001fa:	68fb      	ldr	r3, [r7, #12]
 80001fc:	681b      	ldr	r3, [r3, #0]
 80001fe:	f023 0203 	bic.w	r2, r3, #3
 8000202:	68fb      	ldr	r3, [r7, #12]
 8000204:	601a      	str	r2, [r3, #0]

//	*modeReg |= (1 << 26);
	*modeRegD &= ~(0b11 << 28);
 8000206:	693b      	ldr	r3, [r7, #16]
 8000208:	681b      	ldr	r3, [r3, #0]
 800020a:	f023 5240 	bic.w	r2, r3, #805306368	@ 0x30000000
 800020e:	693b      	ldr	r3, [r7, #16]
 8000210:	601a      	str	r2, [r3, #0]
	*modeRegD |= (1 << 28);
 8000212:	693b      	ldr	r3, [r7, #16]
 8000214:	681b      	ldr	r3, [r3, #0]
 8000216:	f043 5280 	orr.w	r2, r3, #268435456	@ 0x10000000
 800021a:	693b      	ldr	r3, [r7, #16]
 800021c:	601a      	str	r2, [r3, #0]

	int lastButton = 0;
 800021e:	2300      	movs	r3, #0
 8000220:	61fb      	str	r3, [r7, #28]
	int ledOn = 0;
 8000222:	2300      	movs	r3, #0
 8000224:	61bb      	str	r3, [r7, #24]

	while (1) {
		bool current = *inputRegA & (1 << 0);
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	681b      	ldr	r3, [r3, #0]
 800022a:	f003 0301 	and.w	r3, r3, #1
 800022e:	2b00      	cmp	r3, #0
 8000230:	bf14      	ite	ne
 8000232:	2301      	movne	r3, #1
 8000234:	2300      	moveq	r3, #0
 8000236:	70fb      	strb	r3, [r7, #3]
		if (current && !lastButton) {
 8000238:	78fb      	ldrb	r3, [r7, #3]
 800023a:	2b00      	cmp	r3, #0
 800023c:	d019      	beq.n	8000272 <main+0xaa>
 800023e:	69fb      	ldr	r3, [r7, #28]
 8000240:	2b00      	cmp	r3, #0
 8000242:	d116      	bne.n	8000272 <main+0xaa>
			ledOn = !ledOn;
 8000244:	69bb      	ldr	r3, [r7, #24]
 8000246:	2b00      	cmp	r3, #0
 8000248:	bf0c      	ite	eq
 800024a:	2301      	moveq	r3, #1
 800024c:	2300      	movne	r3, #0
 800024e:	b2db      	uxtb	r3, r3
 8000250:	61bb      	str	r3, [r7, #24]

			if (ledOn) {
 8000252:	69bb      	ldr	r3, [r7, #24]
 8000254:	2b00      	cmp	r3, #0
 8000256:	d006      	beq.n	8000266 <main+0x9e>
				*outputRegD |= (1 << 14);
 8000258:	68bb      	ldr	r3, [r7, #8]
 800025a:	681b      	ldr	r3, [r3, #0]
 800025c:	f443 4280 	orr.w	r2, r3, #16384	@ 0x4000
 8000260:	68bb      	ldr	r3, [r7, #8]
 8000262:	601a      	str	r2, [r3, #0]
 8000264:	e005      	b.n	8000272 <main+0xaa>
			} else {
				*outputRegD &= ~(1 << 14);
 8000266:	68bb      	ldr	r3, [r7, #8]
 8000268:	681b      	ldr	r3, [r3, #0]
 800026a:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 800026e:	68bb      	ldr	r3, [r7, #8]
 8000270:	601a      	str	r2, [r3, #0]
			}
		}

		lastButton = current;
 8000272:	78fb      	ldrb	r3, [r7, #3]
 8000274:	61fb      	str	r3, [r7, #28]
	while (1) {
 8000276:	e7d6      	b.n	8000226 <main+0x5e>
 8000278:	40023830 	.word	0x40023830
 800027c:	40020c00 	.word	0x40020c00
 8000280:	40020000 	.word	0x40020000
 8000284:	40020c14 	.word	0x40020c14
 8000288:	40020010 	.word	0x40020010

0800028c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800028c:	480d      	ldr	r0, [pc, #52]	@ (80002c4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800028e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000290:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000294:	480c      	ldr	r0, [pc, #48]	@ (80002c8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000296:	490d      	ldr	r1, [pc, #52]	@ (80002cc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000298:	4a0d      	ldr	r2, [pc, #52]	@ (80002d0 <LoopForever+0xe>)
  movs r3, #0
 800029a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800029c:	e002      	b.n	80002a4 <LoopCopyDataInit>

0800029e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800029e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002a0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002a2:	3304      	adds	r3, #4

080002a4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002a4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002a6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002a8:	d3f9      	bcc.n	800029e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002aa:	4a0a      	ldr	r2, [pc, #40]	@ (80002d4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002ac:	4c0a      	ldr	r4, [pc, #40]	@ (80002d8 <LoopForever+0x16>)
  movs r3, #0
 80002ae:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002b0:	e001      	b.n	80002b6 <LoopFillZerobss>

080002b2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002b2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002b4:	3204      	adds	r2, #4

080002b6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002b6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002b8:	d3fb      	bcc.n	80002b2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ba:	f000 f811 	bl	80002e0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002be:	f7ff ff83 	bl	80001c8 <main>

080002c2 <LoopForever>:

LoopForever:
  b LoopForever
 80002c2:	e7fe      	b.n	80002c2 <LoopForever>
  ldr   r0, =_estack
 80002c4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002c8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002cc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002d0:	08000348 	.word	0x08000348
  ldr r2, =_sbss
 80002d4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002d8:	2000001c 	.word	0x2000001c

080002dc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002dc:	e7fe      	b.n	80002dc <ADC_IRQHandler>
	...

080002e0 <__libc_init_array>:
 80002e0:	b570      	push	{r4, r5, r6, lr}
 80002e2:	4d0d      	ldr	r5, [pc, #52]	@ (8000318 <__libc_init_array+0x38>)
 80002e4:	4c0d      	ldr	r4, [pc, #52]	@ (800031c <__libc_init_array+0x3c>)
 80002e6:	1b64      	subs	r4, r4, r5
 80002e8:	10a4      	asrs	r4, r4, #2
 80002ea:	2600      	movs	r6, #0
 80002ec:	42a6      	cmp	r6, r4
 80002ee:	d109      	bne.n	8000304 <__libc_init_array+0x24>
 80002f0:	4d0b      	ldr	r5, [pc, #44]	@ (8000320 <__libc_init_array+0x40>)
 80002f2:	4c0c      	ldr	r4, [pc, #48]	@ (8000324 <__libc_init_array+0x44>)
 80002f4:	f000 f818 	bl	8000328 <_init>
 80002f8:	1b64      	subs	r4, r4, r5
 80002fa:	10a4      	asrs	r4, r4, #2
 80002fc:	2600      	movs	r6, #0
 80002fe:	42a6      	cmp	r6, r4
 8000300:	d105      	bne.n	800030e <__libc_init_array+0x2e>
 8000302:	bd70      	pop	{r4, r5, r6, pc}
 8000304:	f855 3b04 	ldr.w	r3, [r5], #4
 8000308:	4798      	blx	r3
 800030a:	3601      	adds	r6, #1
 800030c:	e7ee      	b.n	80002ec <__libc_init_array+0xc>
 800030e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000312:	4798      	blx	r3
 8000314:	3601      	adds	r6, #1
 8000316:	e7f2      	b.n	80002fe <__libc_init_array+0x1e>
 8000318:	08000340 	.word	0x08000340
 800031c:	08000340 	.word	0x08000340
 8000320:	08000340 	.word	0x08000340
 8000324:	08000344 	.word	0x08000344

08000328 <_init>:
 8000328:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800032a:	bf00      	nop
 800032c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800032e:	bc08      	pop	{r3}
 8000330:	469e      	mov	lr, r3
 8000332:	4770      	bx	lr

08000334 <_fini>:
 8000334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000336:	bf00      	nop
 8000338:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800033a:	bc08      	pop	{r3}
 800033c:	469e      	mov	lr, r3
 800033e:	4770      	bx	lr
